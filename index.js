const Telegraf = require('telegraf');

const Users = require('./Users');
const { forOwnerOnly, noop, selectUser, userToString } = require('./utils');

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.telegram.getMe().then((botInfo) => {
  bot.options.username = botInfo.username;
  console.log("Server has initialized bot nickname. Nick: " + botInfo.username);

  bot.start((ctx) => {
    const user = selectUser(ctx);
    if (!user) {
      return ctx.replyWithMarkdown(`
–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è - –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –µ—â–µ —Ä–∞–∑
      `);
    }

    const users = new Users();
    users.add(user);
    initActions({ owner: user, users });

    ctx.reply(`
–ü—Ä–∏–≤–µ—Ç! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Ä–∞–∑—ã–≥—Ä–∞—Ç—å —Ç–∞–π–Ω–æ–≥–æ —Å–∞–Ω—Ç—É!
–Ø –±—É–¥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã \@${user.username}. –í—Å–µ, –∫—Ç–æ —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å—Å—è –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∂–µ—Ä–µ–±—å–µ–≤–∫–∏ - –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–ø–æ–º—è–Ω—É–≤ –º–µ–Ω—è (\@${bot.options.username})
–î–∞ –ø—Ä–µ–±—É–¥–µ—Ç —Å –≤–∞–º–∏ –ù–æ–≤—ã–π –ì–æ–¥, –π–æ—Ö–æ—Ö–æ!

P.S. –ü—Ä–æ—à—É, –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \`\/start\` —Å–Ω–æ–≤–∞ (–µ—Å–ª–∏ –∫–æ–Ω–µ—á–Ω–æ –Ω–µ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ) 
    `);
  });

  bot.hears(RegExp(bot.options.username), (ctx) => actions.registerUser(ctx));
  bot.command('list', (ctx) => actions.getList(ctx));
  bot.command('run', (ctx) => actions.doDraft(ctx));

  bot.startPolling();
});


const actions = {
  registerUser: noop,
  getList: noop,
  doDraft: noop,
};

const initActions = ({ owner, users }) => {
  actions.registerUser = (ctx) => {
    const user = selectUser(ctx);
    if (!user) {
      return;
    }

    users.add(
      user,
      () => ctx.reply(`${userToString(user)}, —è –¥–æ–±–∞–≤–∏–ª —Ç–µ–±—è –≤ —Å–ø–∏—Å–æ–∫! üê∑`),
      () => ctx.reply(`${userToString(user)}, —Ç—ã —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ, –Ω–µ –±–µ—Å–ø–æ–∫–æ–π—Å—è üëç`)
    );
  };

  actions.getList = forOwnerOnly((ctx) => {
    ctx.reply(users.toString());
  }, owner);

  actions.doDraft = forOwnerOnly((ctx) => {
    users.calculateMap().forEach((target, user) => {
      bot.telegram.sendMessage(user.id, `
–ü—Ä–∏–≤–µ—Ç! –¢—ã —É—á–∞—Å—Ç–≤–æ–≤–∞–ª(–∞) –≤ –∂–µ—Ä–µ–±—å—ë–≤–∫–µ —Ç–∞–π–Ω–æ–≥–æ —Å–∞–Ω—Ç—ã –∏ —Ç–µ–±–µ –≤—ã–ø–∞–¥–∞–µ—Ç:
${userToString(target)}

–ù–∞—á–∏–Ω–∞–π –≤—ã–±–∏—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫! :)
      `);
    });

    ctx.reply(`–ö–∞–∂–¥—ã–π –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–º–µ–Ω–µ–º. –£—Å—Ç—Ä–æ–π—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É –≤–µ—Å–µ–ª—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫, –π–æ—Ö–æ—Ö–æ!`);
  }, owner);
};
